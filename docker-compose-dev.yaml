services:

  #  databases
  sandbox-db:
    container_name: sandbox-db
    image: postgres:14-alpine
    restart: always
    ports:
      - "5432:5432"
#    volumes:
#      - ./data/sandbox-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  #backends
  backend:
    container_name:   backend
    image: ghcr.io/onlinesandbox/spring-boot-backend:main
    restart: always
    pull_policy: always
    expose:
      - "80"
    depends_on:
      - sandbox-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_URL=postgresql://sandbox-db:5432/postgres

  #frontends
  frontend:
    container_name: frontend
    image: ghcr.io/onlinesandbox/vue-frontend:main
    pull_policy: always
    restart: always
    expose:
      - "80"

  #watchtower
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/.docker/config.json:/config.json
    command: --interval 60
    restart: always

  # reverse-proxy
  reverse-proxy:
    container_name: reverse-proxy
    image: nginx
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./.nginx/compose/nginx-dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
